
Embedded_C_LED_toggle_by_EXT_interrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001d4  08000130  08000130  00001130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000304  0800030c  0000130c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000304  08000304  0000130c  2**0
                  CONTENTS
  4 .ARM          00000000  08000304  08000304  0000130c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000304  0800030c  0000130c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000304  08000304  00001304  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000308  08000308  00001308  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0000130c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800030c  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800030c  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000130c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00001335  2**0
                  CONTENTS, READONLY
 13 .debug_info   000001dc  00000000  00000000  00001378  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000114  00000000  00000000  00001554  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_loc    00000180  00000000  00000000  00001668  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000070  00000000  00000000  000017e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_ranges 00000058  00000000  00000000  00001858  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00001027  00000000  00000000  000018b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00000556  00000000  00000000  000028d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    00003f7b  00000000  00000000  00002e2d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  000000f8  00000000  00000000  00006da8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	080002ec 	.word	0x080002ec

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	080002ec 	.word	0x080002ec

08000170 <clock_init>:

volatile R_ODR_t *const R_ODR = (volatile R_ODR_t*) (GPIOA_BASE + 0x0C);



void clock_init() {
 8000170:	b480      	push	{r7}
 8000172:	af00      	add	r7, sp, #0
	// GPIOA clock enable
	RCC_APB2ENR |= RCC_APB2ENR_IOPAEN;
 8000174:	4b04      	ldr	r3, [pc, #16]	@ (8000188 <clock_init+0x18>)
 8000176:	681b      	ldr	r3, [r3, #0]
 8000178:	4a03      	ldr	r2, [pc, #12]	@ (8000188 <clock_init+0x18>)
 800017a:	f043 0304 	orr.w	r3, r3, #4
 800017e:	6013      	str	r3, [r2, #0]
}
 8000180:	bf00      	nop
 8000182:	46bd      	mov	sp, r7
 8000184:	bc80      	pop	{r7}
 8000186:	4770      	bx	lr
 8000188:	40021018 	.word	0x40021018

0800018c <GPIOA_init>:



void GPIOA_init() {
 800018c:	b480      	push	{r7}
 800018e:	af00      	add	r7, sp, #0
	// Configuring p13 to be an output
	GPIOA_CRH   &= 0xFF0FFFFF;
 8000190:	4b07      	ldr	r3, [pc, #28]	@ (80001b0 <GPIOA_init+0x24>)
 8000192:	681b      	ldr	r3, [r3, #0]
 8000194:	4a06      	ldr	r2, [pc, #24]	@ (80001b0 <GPIOA_init+0x24>)
 8000196:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 800019a:	6013      	str	r3, [r2, #0]
	GPIOA_CRH   |= 0x00200000;
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <GPIOA_init+0x24>)
 800019e:	681b      	ldr	r3, [r3, #0]
 80001a0:	4a03      	ldr	r2, [pc, #12]	@ (80001b0 <GPIOA_init+0x24>)
 80001a2:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80001a6:	6013      	str	r3, [r2, #0]
}
 80001a8:	bf00      	nop
 80001aa:	46bd      	mov	sp, r7
 80001ac:	bc80      	pop	{r7}
 80001ae:	4770      	bx	lr
 80001b0:	40010804 	.word	0x40010804

080001b4 <EXTI0_init>:



void EXTI0_init() {
 80001b4:	b480      	push	{r7}
 80001b6:	af00      	add	r7, sp, #0
	// Unmasking Interrupt request from Line 0
	EXTI_IMR  |= (0b1 << 0);
 80001b8:	4b07      	ldr	r3, [pc, #28]	@ (80001d8 <EXTI0_init+0x24>)
 80001ba:	681b      	ldr	r3, [r3, #0]
 80001bc:	4a06      	ldr	r2, [pc, #24]	@ (80001d8 <EXTI0_init+0x24>)
 80001be:	f043 0301 	orr.w	r3, r3, #1
 80001c2:	6013      	str	r3, [r2, #0]

	// Enabling Rising Trigger (for Event and Interrupt) for input line 0.
	EXTI_RTSR |= (0b1 << 0);
 80001c4:	4b05      	ldr	r3, [pc, #20]	@ (80001dc <EXTI0_init+0x28>)
 80001c6:	681b      	ldr	r3, [r3, #0]
 80001c8:	4a04      	ldr	r2, [pc, #16]	@ (80001dc <EXTI0_init+0x28>)
 80001ca:	f043 0301 	orr.w	r3, r3, #1
 80001ce:	6013      	str	r3, [r2, #0]
}
 80001d0:	bf00      	nop
 80001d2:	46bd      	mov	sp, r7
 80001d4:	bc80      	pop	{r7}
 80001d6:	4770      	bx	lr
 80001d8:	40010400 	.word	0x40010400
 80001dc:	40010408 	.word	0x40010408

080001e0 <NVIC_init>:



void NVIC_init() {
 80001e0:	b480      	push	{r7}
 80001e2:	af00      	add	r7, sp, #0
	// Enabling Interrupt request from EXTI0
	NVIC_ISER0  |= (0b1 << 6);
 80001e4:	4b04      	ldr	r3, [pc, #16]	@ (80001f8 <NVIC_init+0x18>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	4a03      	ldr	r2, [pc, #12]	@ (80001f8 <NVIC_init+0x18>)
 80001ea:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80001ee:	6013      	str	r3, [r2, #0]
}
 80001f0:	bf00      	nop
 80001f2:	46bd      	mov	sp, r7
 80001f4:	bc80      	pop	{r7}
 80001f6:	4770      	bx	lr
 80001f8:	e000e100 	.word	0xe000e100

080001fc <EXTI0_IRQHandler>:



/* EXTI Line0 interrupt handler */
void EXTI0_IRQHandler() {
 80001fc:	b480      	push	{r7}
 80001fe:	af00      	add	r7, sp, #0
	// Toggle pin 13
	R_ODR->pins.p13 ^= (0b1);
 8000200:	4b0b      	ldr	r3, [pc, #44]	@ (8000230 <EXTI0_IRQHandler+0x34>)
 8000202:	681b      	ldr	r3, [r3, #0]
 8000204:	f3c3 3340 	ubfx	r3, r3, #13, #1
 8000208:	b2db      	uxtb	r3, r3
 800020a:	4a09      	ldr	r2, [pc, #36]	@ (8000230 <EXTI0_IRQHandler+0x34>)
 800020c:	f083 0301 	eor.w	r3, r3, #1
 8000210:	b2d9      	uxtb	r1, r3
 8000212:	8813      	ldrh	r3, [r2, #0]
 8000214:	f361 334d 	bfi	r3, r1, #13, #1
 8000218:	8013      	strh	r3, [r2, #0]

	// Write 1 to clear The Pending Status
	EXTI_PR   |= (0b1 << 0);
 800021a:	4b06      	ldr	r3, [pc, #24]	@ (8000234 <EXTI0_IRQHandler+0x38>)
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	4a05      	ldr	r2, [pc, #20]	@ (8000234 <EXTI0_IRQHandler+0x38>)
 8000220:	f043 0301 	orr.w	r3, r3, #1
 8000224:	6013      	str	r3, [r2, #0]
}
 8000226:	bf00      	nop
 8000228:	46bd      	mov	sp, r7
 800022a:	bc80      	pop	{r7}
 800022c:	4770      	bx	lr
 800022e:	bf00      	nop
 8000230:	4001080c 	.word	0x4001080c
 8000234:	40010414 	.word	0x40010414

08000238 <main>:



int main(void) {
 8000238:	b580      	push	{r7, lr}
 800023a:	af00      	add	r7, sp, #0
	clock_init();
 800023c:	f7ff ff98 	bl	8000170 <clock_init>
	GPIOA_init();
 8000240:	f7ff ffa4 	bl	800018c <GPIOA_init>
	EXTI0_init();
 8000244:	f7ff ffb6 	bl	80001b4 <EXTI0_init>
	NVIC_init();
 8000248:	f7ff ffca 	bl	80001e0 <NVIC_init>

	while(1) ;
 800024c:	bf00      	nop
 800024e:	e7fd      	b.n	800024c <main+0x14>

08000250 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000250:	480d      	ldr	r0, [pc, #52]	@ (8000288 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000252:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000254:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000258:	480c      	ldr	r0, [pc, #48]	@ (800028c <LoopForever+0x6>)
  ldr r1, =_edata
 800025a:	490d      	ldr	r1, [pc, #52]	@ (8000290 <LoopForever+0xa>)
  ldr r2, =_sidata
 800025c:	4a0d      	ldr	r2, [pc, #52]	@ (8000294 <LoopForever+0xe>)
  movs r3, #0
 800025e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000260:	e002      	b.n	8000268 <LoopCopyDataInit>

08000262 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000262:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000264:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000266:	3304      	adds	r3, #4

08000268 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000268:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800026a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800026c:	d3f9      	bcc.n	8000262 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800026e:	4a0a      	ldr	r2, [pc, #40]	@ (8000298 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000270:	4c0a      	ldr	r4, [pc, #40]	@ (800029c <LoopForever+0x16>)
  movs r3, #0
 8000272:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000274:	e001      	b.n	800027a <LoopFillZerobss>

08000276 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000276:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000278:	3204      	adds	r2, #4

0800027a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800027a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800027c:	d3fb      	bcc.n	8000276 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800027e:	f000 f811 	bl	80002a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000282:	f7ff ffd9 	bl	8000238 <main>

08000286 <LoopForever>:

LoopForever:
  b LoopForever
 8000286:	e7fe      	b.n	8000286 <LoopForever>
  ldr   r0, =_estack
 8000288:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 800028c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000290:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000294:	0800030c 	.word	0x0800030c
  ldr r2, =_sbss
 8000298:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800029c:	2000001c 	.word	0x2000001c

080002a0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a0:	e7fe      	b.n	80002a0 <ADC1_2_IRQHandler>
	...

080002a4 <__libc_init_array>:
 80002a4:	b570      	push	{r4, r5, r6, lr}
 80002a6:	2600      	movs	r6, #0
 80002a8:	4d0c      	ldr	r5, [pc, #48]	@ (80002dc <__libc_init_array+0x38>)
 80002aa:	4c0d      	ldr	r4, [pc, #52]	@ (80002e0 <__libc_init_array+0x3c>)
 80002ac:	1b64      	subs	r4, r4, r5
 80002ae:	10a4      	asrs	r4, r4, #2
 80002b0:	42a6      	cmp	r6, r4
 80002b2:	d109      	bne.n	80002c8 <__libc_init_array+0x24>
 80002b4:	f000 f81a 	bl	80002ec <_init>
 80002b8:	2600      	movs	r6, #0
 80002ba:	4d0a      	ldr	r5, [pc, #40]	@ (80002e4 <__libc_init_array+0x40>)
 80002bc:	4c0a      	ldr	r4, [pc, #40]	@ (80002e8 <__libc_init_array+0x44>)
 80002be:	1b64      	subs	r4, r4, r5
 80002c0:	10a4      	asrs	r4, r4, #2
 80002c2:	42a6      	cmp	r6, r4
 80002c4:	d105      	bne.n	80002d2 <__libc_init_array+0x2e>
 80002c6:	bd70      	pop	{r4, r5, r6, pc}
 80002c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80002cc:	4798      	blx	r3
 80002ce:	3601      	adds	r6, #1
 80002d0:	e7ee      	b.n	80002b0 <__libc_init_array+0xc>
 80002d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80002d6:	4798      	blx	r3
 80002d8:	3601      	adds	r6, #1
 80002da:	e7f2      	b.n	80002c2 <__libc_init_array+0x1e>
 80002dc:	08000304 	.word	0x08000304
 80002e0:	08000304 	.word	0x08000304
 80002e4:	08000304 	.word	0x08000304
 80002e8:	08000308 	.word	0x08000308

080002ec <_init>:
 80002ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002ee:	bf00      	nop
 80002f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002f2:	bc08      	pop	{r3}
 80002f4:	469e      	mov	lr, r3
 80002f6:	4770      	bx	lr

080002f8 <_fini>:
 80002f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002fa:	bf00      	nop
 80002fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002fe:	bc08      	pop	{r3}
 8000300:	469e      	mov	lr, r3
 8000302:	4770      	bx	lr
