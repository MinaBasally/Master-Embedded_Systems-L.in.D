
GPIO_1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000002a8  08000130  08000130  00001130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003d8  080003e0  000013e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003d8  080003d8  000013e0  2**0
                  CONTENTS
  4 .ARM          00000000  080003d8  080003d8  000013e0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003d8  080003e0  000013e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003d8  080003d8  000013d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003dc  080003dc  000013dc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000013e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080003e0  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080003e0  0000201c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000013e0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000132  00000000  00000000  00001409  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000a9  00000000  00000000  0000153b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    000000c0  00000000  00000000  000015e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000058  00000000  00000000  000016a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000040  00000000  00000000  00001700  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000101b  00000000  00000000  00001740  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000005c3  00000000  00000000  0000275b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00003ee5  00000000  00000000  00002d1e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00006c03  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000009c  00000000  00000000  00006c48  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	080003c0 	.word	0x080003c0

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	080003c0 	.word	0x080003c0

08000170 <clock_init>:
#define GPIOB_IDR		*((vuint32_t*)(GPIOB_BASE + 0x08))
#define GPIOB_ODR		*((vuint32_t*)(GPIOB_BASE + 0x0C))



void clock_init() {
 8000170:	b480      	push	{r7}
 8000172:	af00      	add	r7, sp, #0
	// GPIOA clock enable
	RCC_APB2ENR |= (0b1 << 2);
 8000174:	4b07      	ldr	r3, [pc, #28]	@ (8000194 <clock_init+0x24>)
 8000176:	681b      	ldr	r3, [r3, #0]
 8000178:	4a06      	ldr	r2, [pc, #24]	@ (8000194 <clock_init+0x24>)
 800017a:	f043 0304 	orr.w	r3, r3, #4
 800017e:	6013      	str	r3, [r2, #0]
	// GPIOB clock enable
	RCC_APB2ENR |= (0b1 << 3);
 8000180:	4b04      	ldr	r3, [pc, #16]	@ (8000194 <clock_init+0x24>)
 8000182:	681b      	ldr	r3, [r3, #0]
 8000184:	4a03      	ldr	r2, [pc, #12]	@ (8000194 <clock_init+0x24>)
 8000186:	f043 0308 	orr.w	r3, r3, #8
 800018a:	6013      	str	r3, [r2, #0]
}
 800018c:	bf00      	nop
 800018e:	46bd      	mov	sp, r7
 8000190:	bc80      	pop	{r7}
 8000192:	4770      	bx	lr
 8000194:	40021018 	.word	0x40021018

08000198 <GPIO_init>:



void GPIO_init() {
 8000198:	b480      	push	{r7}
 800019a:	af00      	add	r7, sp, #0
	GPIOA_CRH = 0 ;
 800019c:	4b40      	ldr	r3, [pc, #256]	@ (80002a0 <GPIO_init+0x108>)
 800019e:	2200      	movs	r2, #0
 80001a0:	601a      	str	r2, [r3, #0]
	GPIOA_CRL = 0 ;
 80001a2:	4b40      	ldr	r3, [pc, #256]	@ (80002a4 <GPIO_init+0x10c>)
 80001a4:	2200      	movs	r2, #0
 80001a6:	601a      	str	r2, [r3, #0]
	GPIOA_ODR = 0 ;
 80001a8:	4b3f      	ldr	r3, [pc, #252]	@ (80002a8 <GPIO_init+0x110>)
 80001aa:	2200      	movs	r2, #0
 80001ac:	601a      	str	r2, [r3, #0]
	GPIOB_CRH = 0 ;
 80001ae:	4b3f      	ldr	r3, [pc, #252]	@ (80002ac <GPIO_init+0x114>)
 80001b0:	2200      	movs	r2, #0
 80001b2:	601a      	str	r2, [r3, #0]
	GPIOB_CRL = 0 ;
 80001b4:	4b3e      	ldr	r3, [pc, #248]	@ (80002b0 <GPIO_init+0x118>)
 80001b6:	2200      	movs	r2, #0
 80001b8:	601a      	str	r2, [r3, #0]
	GPIOB_ODR = 0 ;
 80001ba:	4b3e      	ldr	r3, [pc, #248]	@ (80002b4 <GPIO_init+0x11c>)
 80001bc:	2200      	movs	r2, #0
 80001be:	601a      	str	r2, [r3, #0]

	/////////////////////////
	/////////////////////////

	// Configuring GPIOA p1 to be a Floating Input (0b0100)
	GPIOA_CRL &= ~(0b1 << 4);
 80001c0:	4b38      	ldr	r3, [pc, #224]	@ (80002a4 <GPIO_init+0x10c>)
 80001c2:	681b      	ldr	r3, [r3, #0]
 80001c4:	4a37      	ldr	r2, [pc, #220]	@ (80002a4 <GPIO_init+0x10c>)
 80001c6:	f023 0310 	bic.w	r3, r3, #16
 80001ca:	6013      	str	r3, [r2, #0]
	GPIOA_CRL &= ~(0b1 << 5);
 80001cc:	4b35      	ldr	r3, [pc, #212]	@ (80002a4 <GPIO_init+0x10c>)
 80001ce:	681b      	ldr	r3, [r3, #0]
 80001d0:	4a34      	ldr	r2, [pc, #208]	@ (80002a4 <GPIO_init+0x10c>)
 80001d2:	f023 0320 	bic.w	r3, r3, #32
 80001d6:	6013      	str	r3, [r2, #0]
	GPIOA_CRL |= (0b1 << 6);
 80001d8:	4b32      	ldr	r3, [pc, #200]	@ (80002a4 <GPIO_init+0x10c>)
 80001da:	681b      	ldr	r3, [r3, #0]
 80001dc:	4a31      	ldr	r2, [pc, #196]	@ (80002a4 <GPIO_init+0x10c>)
 80001de:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80001e2:	6013      	str	r3, [r2, #0]
	GPIOA_CRL &= ~(0b1 << 7);
 80001e4:	4b2f      	ldr	r3, [pc, #188]	@ (80002a4 <GPIO_init+0x10c>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	4a2e      	ldr	r2, [pc, #184]	@ (80002a4 <GPIO_init+0x10c>)
 80001ea:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80001ee:	6013      	str	r3, [r2, #0]
	// Configuring GPIOA p13 to be a Floating Input (0b0100)
	GPIOA_CRH &= ~(0b1 << 20);
 80001f0:	4b2b      	ldr	r3, [pc, #172]	@ (80002a0 <GPIO_init+0x108>)
 80001f2:	681b      	ldr	r3, [r3, #0]
 80001f4:	4a2a      	ldr	r2, [pc, #168]	@ (80002a0 <GPIO_init+0x108>)
 80001f6:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 80001fa:	6013      	str	r3, [r2, #0]
	GPIOA_CRH &= ~(0b1 << 21);
 80001fc:	4b28      	ldr	r3, [pc, #160]	@ (80002a0 <GPIO_init+0x108>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	4a27      	ldr	r2, [pc, #156]	@ (80002a0 <GPIO_init+0x108>)
 8000202:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8000206:	6013      	str	r3, [r2, #0]
	GPIOA_CRH |= (0b1 << 22);
 8000208:	4b25      	ldr	r3, [pc, #148]	@ (80002a0 <GPIO_init+0x108>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	4a24      	ldr	r2, [pc, #144]	@ (80002a0 <GPIO_init+0x108>)
 800020e:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8000212:	6013      	str	r3, [r2, #0]
	GPIOA_CRH &= ~(0b1 << 23);
 8000214:	4b22      	ldr	r3, [pc, #136]	@ (80002a0 <GPIO_init+0x108>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	4a21      	ldr	r2, [pc, #132]	@ (80002a0 <GPIO_init+0x108>)
 800021a:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 800021e:	6013      	str	r3, [r2, #0]

	/////////////////////////
	/////////////////////////

	// Configuring GPIOB p1 to be a Push-Pull Output (0b0001)
	GPIOB_CRL |= (0b1 << 4);
 8000220:	4b23      	ldr	r3, [pc, #140]	@ (80002b0 <GPIO_init+0x118>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4a22      	ldr	r2, [pc, #136]	@ (80002b0 <GPIO_init+0x118>)
 8000226:	f043 0310 	orr.w	r3, r3, #16
 800022a:	6013      	str	r3, [r2, #0]
	GPIOB_CRL &= ~(0b1 << 5);
 800022c:	4b20      	ldr	r3, [pc, #128]	@ (80002b0 <GPIO_init+0x118>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	4a1f      	ldr	r2, [pc, #124]	@ (80002b0 <GPIO_init+0x118>)
 8000232:	f023 0320 	bic.w	r3, r3, #32
 8000236:	6013      	str	r3, [r2, #0]
	GPIOB_CRL &= ~(0b1 << 6);
 8000238:	4b1d      	ldr	r3, [pc, #116]	@ (80002b0 <GPIO_init+0x118>)
 800023a:	681b      	ldr	r3, [r3, #0]
 800023c:	4a1c      	ldr	r2, [pc, #112]	@ (80002b0 <GPIO_init+0x118>)
 800023e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000242:	6013      	str	r3, [r2, #0]
	GPIOB_CRL &= ~(0b1 << 7);
 8000244:	4b1a      	ldr	r3, [pc, #104]	@ (80002b0 <GPIO_init+0x118>)
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	4a19      	ldr	r2, [pc, #100]	@ (80002b0 <GPIO_init+0x118>)
 800024a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800024e:	6013      	str	r3, [r2, #0]
	// Configuring GPIOB p13 to be a Push-Pull Output (0b0001)
	GPIOB_CRH |= (0b1 << 20);
 8000250:	4b16      	ldr	r3, [pc, #88]	@ (80002ac <GPIO_init+0x114>)
 8000252:	681b      	ldr	r3, [r3, #0]
 8000254:	4a15      	ldr	r2, [pc, #84]	@ (80002ac <GPIO_init+0x114>)
 8000256:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800025a:	6013      	str	r3, [r2, #0]
	GPIOB_CRH &= ~(0b1 << 21);
 800025c:	4b13      	ldr	r3, [pc, #76]	@ (80002ac <GPIO_init+0x114>)
 800025e:	681b      	ldr	r3, [r3, #0]
 8000260:	4a12      	ldr	r2, [pc, #72]	@ (80002ac <GPIO_init+0x114>)
 8000262:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8000266:	6013      	str	r3, [r2, #0]
	GPIOB_CRH &= ~(0b1 << 22);
 8000268:	4b10      	ldr	r3, [pc, #64]	@ (80002ac <GPIO_init+0x114>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	4a0f      	ldr	r2, [pc, #60]	@ (80002ac <GPIO_init+0x114>)
 800026e:	f423 0380 	bic.w	r3, r3, #4194304	@ 0x400000
 8000272:	6013      	str	r3, [r2, #0]
	GPIOB_CRH &= ~(0b1 << 23);
 8000274:	4b0d      	ldr	r3, [pc, #52]	@ (80002ac <GPIO_init+0x114>)
 8000276:	681b      	ldr	r3, [r3, #0]
 8000278:	4a0c      	ldr	r2, [pc, #48]	@ (80002ac <GPIO_init+0x114>)
 800027a:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 800027e:	6013      	str	r3, [r2, #0]

	/////////////////////////
	/////////////////////////

	//Putting ZERO Potential Difference across both LEDs connected to PB1 & PB13
	GPIOB_ODR |= (0b1 << 1);
 8000280:	4b0c      	ldr	r3, [pc, #48]	@ (80002b4 <GPIO_init+0x11c>)
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	4a0b      	ldr	r2, [pc, #44]	@ (80002b4 <GPIO_init+0x11c>)
 8000286:	f043 0302 	orr.w	r3, r3, #2
 800028a:	6013      	str	r3, [r2, #0]
	GPIOB_ODR |= (0b1 << 13);
 800028c:	4b09      	ldr	r3, [pc, #36]	@ (80002b4 <GPIO_init+0x11c>)
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	4a08      	ldr	r2, [pc, #32]	@ (80002b4 <GPIO_init+0x11c>)
 8000292:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000296:	6013      	str	r3, [r2, #0]
}
 8000298:	bf00      	nop
 800029a:	46bd      	mov	sp, r7
 800029c:	bc80      	pop	{r7}
 800029e:	4770      	bx	lr
 80002a0:	40010804 	.word	0x40010804
 80002a4:	40010800 	.word	0x40010800
 80002a8:	4001080c 	.word	0x4001080c
 80002ac:	40010c04 	.word	0x40010c04
 80002b0:	40010c00 	.word	0x40010c00
 80002b4:	40010c0c 	.word	0x40010c0c

080002b8 <main>:



int main(void) {
 80002b8:	b580      	push	{r7, lr}
 80002ba:	b082      	sub	sp, #8
 80002bc:	af00      	add	r7, sp, #0
	volatile unsigned int i;
	clock_init();
 80002be:	f7ff ff57 	bl	8000170 <clock_init>
	GPIO_init();
 80002c2:	f7ff ff69 	bl	8000198 <GPIO_init>

	while(1) {
		// Toggling GPIOB p1 ONCE every time the button gets closed(switched ON) [Single pressing]
		// Button is connected to a pull-up resistor (PUR)
		if (((GPIOA_IDR & (0b1 << 1)) >> 1) == 0) {
 80002c6:	4b15      	ldr	r3, [pc, #84]	@ (800031c <main+0x64>)
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	f003 0302 	and.w	r3, r3, #2
 80002ce:	2b00      	cmp	r3, #0
 80002d0:	d10c      	bne.n	80002ec <main+0x34>
			GPIOB_ODR ^= (0b1 << 1);
 80002d2:	4b13      	ldr	r3, [pc, #76]	@ (8000320 <main+0x68>)
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	4a12      	ldr	r2, [pc, #72]	@ (8000320 <main+0x68>)
 80002d8:	f083 0302 	eor.w	r3, r3, #2
 80002dc:	6013      	str	r3, [r2, #0]
			while (((GPIOA_IDR & (0b1 << 1)) >> 1) == 0) ;
 80002de:	bf00      	nop
 80002e0:	4b0e      	ldr	r3, [pc, #56]	@ (800031c <main+0x64>)
 80002e2:	681b      	ldr	r3, [r3, #0]
 80002e4:	f003 0302 	and.w	r3, r3, #2
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	d0f9      	beq.n	80002e0 <main+0x28>
		}
		// Toggling GPIOB p13 Non-Stop every time the button gets closed(switched ON) [Multi-pressing]
		// Button is connected to a pull-down resistor (PDR)
		if (((GPIOA_IDR & (0b1 << 13)) >> 13) == 1) {
 80002ec:	4b0b      	ldr	r3, [pc, #44]	@ (800031c <main+0x64>)
 80002ee:	681b      	ldr	r3, [r3, #0]
 80002f0:	0b5b      	lsrs	r3, r3, #13
 80002f2:	f003 0301 	and.w	r3, r3, #1
 80002f6:	2b01      	cmp	r3, #1
 80002f8:	d1e5      	bne.n	80002c6 <main+0xe>
			GPIOB_ODR ^= (0b1 << 13);
 80002fa:	4b09      	ldr	r3, [pc, #36]	@ (8000320 <main+0x68>)
 80002fc:	681b      	ldr	r3, [r3, #0]
 80002fe:	4a08      	ldr	r2, [pc, #32]	@ (8000320 <main+0x68>)
 8000300:	f483 5300 	eor.w	r3, r3, #8192	@ 0x2000
 8000304:	6013      	str	r3, [r2, #0]
			for (i = 0; i < 1000; i++) ;  //arbitrary delay
 8000306:	2300      	movs	r3, #0
 8000308:	607b      	str	r3, [r7, #4]
 800030a:	e002      	b.n	8000312 <main+0x5a>
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	3301      	adds	r3, #1
 8000310:	607b      	str	r3, [r7, #4]
 8000312:	687b      	ldr	r3, [r7, #4]
 8000314:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8000318:	d3f8      	bcc.n	800030c <main+0x54>
		if (((GPIOA_IDR & (0b1 << 1)) >> 1) == 0) {
 800031a:	e7d4      	b.n	80002c6 <main+0xe>
 800031c:	40010808 	.word	0x40010808
 8000320:	40010c0c 	.word	0x40010c0c

08000324 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000324:	480d      	ldr	r0, [pc, #52]	@ (800035c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000326:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000328:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800032c:	480c      	ldr	r0, [pc, #48]	@ (8000360 <LoopForever+0x6>)
  ldr r1, =_edata
 800032e:	490d      	ldr	r1, [pc, #52]	@ (8000364 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000330:	4a0d      	ldr	r2, [pc, #52]	@ (8000368 <LoopForever+0xe>)
  movs r3, #0
 8000332:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000334:	e002      	b.n	800033c <LoopCopyDataInit>

08000336 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000336:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000338:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800033a:	3304      	adds	r3, #4

0800033c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800033c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800033e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000340:	d3f9      	bcc.n	8000336 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000342:	4a0a      	ldr	r2, [pc, #40]	@ (800036c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000344:	4c0a      	ldr	r4, [pc, #40]	@ (8000370 <LoopForever+0x16>)
  movs r3, #0
 8000346:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000348:	e001      	b.n	800034e <LoopFillZerobss>

0800034a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800034a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800034c:	3204      	adds	r2, #4

0800034e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800034e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000350:	d3fb      	bcc.n	800034a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000352:	f000 f811 	bl	8000378 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000356:	f7ff ffaf 	bl	80002b8 <main>

0800035a <LoopForever>:

LoopForever:
  b LoopForever
 800035a:	e7fe      	b.n	800035a <LoopForever>
  ldr   r0, =_estack
 800035c:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 8000360:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000364:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000368:	080003e0 	.word	0x080003e0
  ldr r2, =_sbss
 800036c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000370:	2000001c 	.word	0x2000001c

08000374 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000374:	e7fe      	b.n	8000374 <ADC1_2_IRQHandler>
	...

08000378 <__libc_init_array>:
 8000378:	b570      	push	{r4, r5, r6, lr}
 800037a:	2600      	movs	r6, #0
 800037c:	4d0c      	ldr	r5, [pc, #48]	@ (80003b0 <__libc_init_array+0x38>)
 800037e:	4c0d      	ldr	r4, [pc, #52]	@ (80003b4 <__libc_init_array+0x3c>)
 8000380:	1b64      	subs	r4, r4, r5
 8000382:	10a4      	asrs	r4, r4, #2
 8000384:	42a6      	cmp	r6, r4
 8000386:	d109      	bne.n	800039c <__libc_init_array+0x24>
 8000388:	f000 f81a 	bl	80003c0 <_init>
 800038c:	2600      	movs	r6, #0
 800038e:	4d0a      	ldr	r5, [pc, #40]	@ (80003b8 <__libc_init_array+0x40>)
 8000390:	4c0a      	ldr	r4, [pc, #40]	@ (80003bc <__libc_init_array+0x44>)
 8000392:	1b64      	subs	r4, r4, r5
 8000394:	10a4      	asrs	r4, r4, #2
 8000396:	42a6      	cmp	r6, r4
 8000398:	d105      	bne.n	80003a6 <__libc_init_array+0x2e>
 800039a:	bd70      	pop	{r4, r5, r6, pc}
 800039c:	f855 3b04 	ldr.w	r3, [r5], #4
 80003a0:	4798      	blx	r3
 80003a2:	3601      	adds	r6, #1
 80003a4:	e7ee      	b.n	8000384 <__libc_init_array+0xc>
 80003a6:	f855 3b04 	ldr.w	r3, [r5], #4
 80003aa:	4798      	blx	r3
 80003ac:	3601      	adds	r6, #1
 80003ae:	e7f2      	b.n	8000396 <__libc_init_array+0x1e>
 80003b0:	080003d8 	.word	0x080003d8
 80003b4:	080003d8 	.word	0x080003d8
 80003b8:	080003d8 	.word	0x080003d8
 80003bc:	080003dc 	.word	0x080003dc

080003c0 <_init>:
 80003c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003c2:	bf00      	nop
 80003c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003c6:	bc08      	pop	{r3}
 80003c8:	469e      	mov	lr, r3
 80003ca:	4770      	bx	lr

080003cc <_fini>:
 80003cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ce:	bf00      	nop
 80003d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003d2:	bc08      	pop	{r3}
 80003d4:	469e      	mov	lr, r3
 80003d6:	4770      	bx	lr
